#!/usr/bin/env python3
import asyncio
import struct
import pprint

UPSTREAM = ("8.8.8.8", 53)

class DNSProxy(asyncio.DatagramProtocol):
    def connection_made(self, transport):
        self.transport = transport
        print("‚úÖ DNS-–ø—Ä–æ–∫—Å–∏ —Å–ª—É—à–∞–µ—Ç UDP/5353")

    def datagram_received(self, data, addr):
        # –õ–æ–≥–∏ –ø–æ–ª—É—á–µ–Ω–∏—è
        print(f"‚ñ∂Ô∏è –ó–∞–ø—Ä–æ—Å {len(data)} –±–∞–π—Ç –æ—Ç {addr}")
        pprint.pprint(self._parse_header(data))

        if addr == UPSTREAM:
            # –ø—Ä–∏—à—ë–ª –æ—Ç–≤–µ—Ç –æ—Ç Google DNS
            self.transport.sendto(data, self._last_client)
            print("‚óÄÔ∏è –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–ª–∏–µ–Ω—Ç—É", self._last_client)
            return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ upstream
        self.transport.sendto(data, UPSTREAM)
        print("‚ñ∂Ô∏è –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ upstream", UPSTREAM)

        # –ñ–¥—ë–º –æ—Ç–≤–µ—Ç –æ—Ç upstream –≤ —Ç–æ–º –∂–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–µ
        # –û–Ω –ø—Ä–∏–¥—ë—Ç –≤ —Ç–æ—Ç –∂–µ –º–µ—Ç–æ–¥ datagram_received,
        # –Ω–æ addr —É–∂–µ –±—É–¥–µ—Ç ("8.8.8.8", 53)
        # –ø–æ—ç—Ç–æ–º—É –ø–æ–π–º–∞–µ–º –µ–≥–æ —Ç–∞–º –∏ –ø–æ—à–ª—ë–º –Ω–∞–∑–∞–¥ –∫–ª–∏–µ–Ω—Ç—É.
        # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã —Ä–∞–∑–ª–∏—á–∞–µ–º –ø–æ addr:
        #   –µ—Å–ª–∏ addr == UPSTREAM ‚Äî —ç—Ç–æ –æ—Ç–≤–µ—Ç, —à–ª—ë–º –∫–ª–∏–µ–Ω—Ç—É
        self._last_client = addr

    def _parse_header(self, data: bytes) -> dict:
        # –¢–æ–ª—å–∫–æ –ø–∞—Ä–∞ –ø–æ–ª–µ–π –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
        qid = struct.unpack("!H", data[0:2])[0]
        flags = struct.unpack("!H", data[2:4])[0]
        qr = (flags >> 15) & 0x1
        tc = (flags >> 9) & 0x1
        return {"id": qid, "qr": qr, "tc": tc}

    def error_received(self, exc):
        print("‚ÄºÔ∏è –û—à–∏–±–∫–∞ UDP:", exc)

    def connection_lost(self, exc):
        print("üî¥ UDP —Å–æ–∫–µ—Ç –∑–∞–∫—Ä—ã—Ç")

async def main():
    loop = asyncio.get_event_loop()
    # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º—Å—è –∫ 0.0.0.0:5353
    transport, protocol = await loop.create_datagram_endpoint(
        lambda: DNSProxy(),
        local_addr=("0.0.0.0", 5353)
    )
    # –ë–ª–æ–∫–∏—Ä—É–µ–º—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞
    await asyncio.Future()

if __name__ == "__main__":
    asyncio.run(main())
